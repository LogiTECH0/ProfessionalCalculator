import tkinter as tk
import math
import re
eWin = tk.Tk()
eWin.geometry("400x520")
eWin.configure(bg="silver")
eWin.title("Engineering Calculator")
eWin.resizable(False,False)
mainField = tk.Entry(eWin, width=21, font=("Montserrat",24))
mainField.place(x=10,y=25)
savedA = None
savedB = None
savedC = None
def add_number(symbol):
    mainField.insert(tk.END, symbol)
def clear_entry():
    mainField.delete(0, tk.END)
def result_entry():
    raw_result = mainField.get()
    sorted_result = raw_result.replace("^", "**")
    sorted_result = re.sub(r'√(\d+)', r'math.sqrt(\1)',sorted_result)
    sorted_result = re.sub(r'sin(\d+)', r'math.sin(math.radians(\1))', sorted_result)
    sorted_result = re.sub(r'cos(\d+)', r'math.cos(math.radians(\1))', sorted_result)
    sorted_result = re.sub(r'tan(\d+)', r'math.tan(math.radians(\1))', sorted_result)
    sorted_result = re.sub(r'π', r'math.pi', sorted_result)
    sorted_result = re.sub(r'e', r'math.e', sorted_result)
    sorted_result = re.sub(r'τ', r'math.tau', sorted_result)
    sorted_result = re.sub(r'log(\d+)\(([^)]+)\)', r'math.log(\2, \1)', sorted_result)
    sorted_result = re.sub(r'ln(\d+)', r'math.log(\1)', sorted_result)
    sorted_result = re.sub(r'arcsin\(([^)]+)\)', r'math.degrees(math.asin(\1))', sorted_result)
    sorted_result = re.sub(r'arccos\(([^)]+)\)', r'math.degrees(math.acos(\1))', sorted_result)
    sorted_result = re.sub(r'arctan\(([^)]+)\)', r'math.degrees(math.atan(\1))', sorted_result)
    result = eval(sorted_result)
    try:
        result = eval(sorted_result, {"math": math})
        mainField.delete(0, tk.END)
        mainField.insert(tk.END, str(result))
    except Exception as e:
        mainField.delete(0, tk.END)
        mainField.insert(tk.END, "Error")
    mainField.delete(0, tk.END)
    mainField.insert(tk.END, str(result))
def formularCalculator():
    fWin=tk.Tk()
    fWin.title("Formular Calculator")
    fWin.geometry("400x520")
    fWin.configure(bg="silver")
    fWin.resizable(False, False)

    def add_number(symbol):
        secondField.insert(tk.END, symbol)

    def clear_entry():
        secondField.delete(0, tk.END)

    def save_variable(var_name):
        global savedA, savedB, savedC
        value = secondField.get()
        if var_name == "a":
            savedA = value
        elif var_name == "b":
            savedB = value
        elif var_name == "c":
            savedC = value
        secondField.delete(0, tk.END)

    def result_entry():
        global savedA, savedB, savedC
        raw_result = secondField.get()
        raw_result = raw_result.replace("^", "**")
        if savedA is not None:
            raw_result = raw_result.replace("a", str(savedA))
        if savedB is not None:
            raw_result = raw_result.replace("b", str(savedB))
        if savedC is not None:
            raw_result = raw_result.replace("c", str(savedC))

        try:
            result = eval(raw_result, {"math": math})
            secondField.delete(0, tk.END)
            secondField.insert(tk.END, str(result))
        except Exception:
            secondField.delete(0, tk.END)
            secondField.insert(tk.END, "Error")
    secondField = tk.Entry(fWin, width=21, font=("Montserrat", 24))
    secondField.place(x=10, y=25)
    one = tk.Button(fWin, width=8, font=("Montserrat", 12), text="1", command=lambda t=1: add_number(t), bg="grey")
    one.place(x=110, y=75)
    two = tk.Button(fWin, width=8, font=("Montserrat", 12), text="2", command=lambda t=2: add_number(t), bg="grey")
    two.place(x=210, y=75)
    three = tk.Button(fWin, width=8, font=("Montserrat", 12), text="3", command=lambda t=3: add_number(t), bg="grey")
    three.place(x=310, y=75)
    four = tk.Button(fWin, width=8, font=("Montserrat", 12), text="4", command=lambda t=4: add_number(t), bg="grey")
    four.place(x=110, y=125)
    five = tk.Button(fWin, width=8, font=("Montserrat", 12), text="5", command=lambda t=5: add_number(t), bg="grey")
    five.place(x=210, y=125)
    six = tk.Button(fWin, width=8, font=("Montserrat", 12), text="6", command=lambda t=6: add_number(t), bg="grey")
    six.place(x=310, y=125)
    seven = tk.Button(fWin, width=8, font=("Montserrat", 12), text="7", command=lambda t=7: add_number(t), bg="grey")
    seven.place(x=110, y=175)
    eight = tk.Button(fWin, width=8, font=("Montserrat", 12), text="8", command=lambda t=8: add_number(t), bg="grey")
    eight.place(x=210, y=175)
    nine = tk.Button(fWin, width=8, font=("Montserrat", 12), text="9", command=lambda t=9: add_number(t), bg="grey")
    nine.place(x=310, y=175)
    zero = tk.Button(fWin, width=8, font=("Montserrat", 12), text="0", command=lambda t=0: add_number(t), bg="grey")
    zero.place(x=210, y=225)
    ce = tk.Button(fWin, width=8, font=("Montserrat", 12), text="CE", command=clear_entry, bg="grey")
    ce.place(x=10, y=225)
    equal = tk.Button(fWin, width=8, font=("Montserrat", 12), text="=", command=result_entry, bg="grey")
    equal.place(x=110, y=225)
    dot = tk.Button(fWin, width=8, font=("Montserrat", 12), text=".", command=lambda t=".": add_number(t), bg="grey")
    dot.place(x=310, y=225)
    a = tk.Button(fWin, width=8, font=("Montserrat", 12), text="a", command=lambda: save_variable("a"), bg="grey")
    a.place(x=10, y=75)
    b = tk.Button(fWin, width=8, font=("Montserrat", 12), text="b", command=lambda: save_variable("b"), bg="grey")
    b.place(x=10, y=125)
    c = tk.Button(fWin, width=8, font=("Montserrat", 12), text="c", command=lambda: save_variable("c"), bg="grey")
    c.place(x=10, y=175)
    pythagorean = tk.Button(fWin, width=8, font=("Montserrat", 12), text="a^2+b^2", command=lambda t="a^2+b^2": add_number(t), bg="grey")
    pythagorean.place(x=10, y=275)
    productSD = tk.Button(fWin, width=8, font=("Montserrat", 12), text="(a-b)(a+b)",command=lambda t="(a-b)*(a+b)": add_number(t), bg="grey")
    productSD.place(x=110, y=275)
    qSum = tk.Button(fWin, width=8, font=("Montserrat", 12), text="(a+b)^2",command=lambda t="(a+b)^2": add_number(t), bg="grey")
    qSum.place(x=210, y=275)
    qDiff = tk.Button(fWin, width=8, font=("Montserrat", 12), text="(a-b)^2", command=lambda t="(a-b)^2": add_number(t),bg="grey")
    qDiff.place(x=310, y=275)
    areaSquare = tk.Button(fWin, width=8, font=("Montserrat", 12), text="a^2",command=lambda t="a^2": add_number(t), bg="grey")
    areaSquare.place(x=10, y=325)
    areaRect = tk.Button(fWin, width=8, font=("Montserrat", 12), text="a*b",command=lambda t="a*b": add_number(t), bg="grey")
    areaRect.place(x=110, y=325)
    areaTri = tk.Button(fWin, width=8, font=("Montserrat", 12), text="(a*h)/2", command=lambda t="(a*b)/2": add_number(t),bg="grey")
    areaTri.place(x=210, y=325)
    areaParal = tk.Button(fWin, width=8, font=("Montserrat", 12), text="a*h", command=lambda t="a*b": add_number(t),bg="grey")
    areaParal.place(x=310, y=325)
    areaTrap = tk.Button(fWin, width=8, font=("Montserrat", 12), text="((a+b)*h)/2", command=lambda t="((a+b)*h)/2": add_number(t),bg="grey")
    areaTrap.place(x=110, y=375)
    areaRhombus = tk.Button(fWin, width=8, font=("Montserrat", 12), text="(d1*d2)/2", command=lambda t="(a*b)/2": add_number(t),bg="grey")
    areaRhombus.place(x=210, y=375)
    fWin.mainloop()
one = tk.Button(eWin, width=8, font=("Montserrat",12), text="1", command=lambda t=1:add_number(t), bg="grey")
one.place(x=110,y=175)
two = tk.Button(eWin, width=8, font=("Montserrat",12), text="2", command=lambda t=2:add_number(t), bg="grey")
two.place(x=210,y=175)
three = tk.Button(eWin, width=8, font=("Montserrat",12), text="3", command=lambda t=3:add_number(t), bg="grey")
three.place(x=310,y=175)
four = tk.Button(eWin, width=8, font=("Montserrat",12), text="4", command=lambda t=4:add_number(t), bg="grey")
four.place(x=110,y=225)
five = tk.Button(eWin, width=8, font=("Montserrat",12), text="5", command=lambda t=5:add_number(t), bg="grey")
five.place(x=210,y=225)
six = tk.Button(eWin, width=8, font=("Montserrat",12), text="6", command=lambda t=6:add_number(t), bg="grey")
six.place(x=310,y=225)
seven = tk.Button(eWin, width=8, font=("Montserrat",12), text="7", command=lambda t=7:add_number(t), bg="grey")
seven.place(x=110,y=275)
eight = tk.Button(eWin, width=8, font=("Montserrat",12), text="8", command=lambda t=8:add_number(t), bg="grey")
eight.place(x=210,y=275)
nine = tk.Button(eWin, width=8, font=("Montserrat",12), text="9", command=lambda t=9:add_number(t), bg="grey")
nine.place(x=310,y=275)
zero = tk.Button(eWin, width=8, font=("Montserrat",12), text="0", command=lambda t=0:add_number(t), bg="grey")
zero.place(x=210,y=325)
ce = tk.Button(eWin, width=8, font=("Montserrat",12), text="CE", command=clear_entry, bg="grey")
ce.place(x=10,y=425)
equal = tk.Button(eWin, width=8, font=("Montserrat",12), text="=", command=result_entry, bg="grey")
equal.place(x=310,y=325)
plus = tk.Button(eWin, width=8, font=("Montserrat",12), text="+", command=lambda t="+":add_number(t), bg="grey")
plus.place(x=10,y=375)
minus = tk.Button(eWin, width=8, font=("Montserrat",12), text="-", command=lambda t="-":add_number(t), bg="grey")
minus.place(x=110,y=375)
multi = tk.Button(eWin, width=8, font=("Montserrat",12), text="*", command=lambda t="*":add_number(t), bg="grey")
multi.place(x=210,y=375)
division = tk.Button(eWin, width=8, font=("Montserrat",12), text="/", command=lambda t="/":add_number(t), bg="grey")
division.place(x=310,y=375)
exponential = tk.Button(eWin, width=8, font=("Montserrat",12), text="^", command=lambda t="^":add_number(t), bg="grey")
exponential.place(x=10,y=225)
sine = tk.Button(eWin, width=8, font=("Montserrat",12), text="sin", command=lambda t="sin":add_number(t), bg="grey")
sine.place(x=210,y=75)
cosine = tk.Button(eWin, width=8, font=("Montserrat",12), text="cos", command=lambda t="cos":add_number(t), bg="grey")
cosine.place(x=310,y=75)
tangent = tk.Button(eWin, width=8, font=("Montserrat",12), text="tan", command=lambda t="tan":add_number(t), bg="grey")
tangent.place(x=10,y=125)
open_bracket = tk.Button(eWin, width=8, font=("Montserrat",12), text="(", command=lambda t="(":add_number(t), bg="grey")
open_bracket.place(x=210,y=425)
close_bracket = tk.Button(eWin, width=8, font=("Montserrat",12), text=")", command=lambda t=")":add_number(t), bg="grey")
close_bracket.place(x=310,y=425)
logarithm = tk.Button(eWin, width=8, font=("Montserrat",12), text="log", command=lambda t="log":add_number(t), bg="grey")
logarithm.place(x=10,y=75)
nLogarithm = tk.Button(eWin, width=8, font=("Montserrat",12), text="ln", command=lambda t="ln":add_number(t), bg="grey")
nLogarithm.place(x=110,y=75)
pi = tk.Button(eWin, width=8, font=("Montserrat",12), text="π", command=lambda t="π":add_number(t), bg="grey")
pi.place(x=10,y=275)
eulers = tk.Button(eWin, width=8, font=("Montserrat",12), text="e", command=lambda t="e":add_number(t), bg="grey")
eulers.place(x=10,y=325)
sqrt = tk.Button(eWin, width=8, font=("Montserrat",12), text="√", command=lambda t="√":add_number(t), bg="grey")
sqrt.place(x=10,y=175)
tau = tk.Button(eWin, width=8, font=("Montserrat",12), text="τ", command=lambda t="τ":add_number(t), bg="grey")
tau.place(x=110,y=425)
arcsin = tk.Button(eWin, width=8, font=("Montserrat",12), text="arcsin", command=lambda t="arcsin": add_number(t), bg="grey")
arcsin.place(x=110, y=125)
arccos = tk.Button(eWin, width=8, font=("Montserrat",12), text="arccos", command=lambda t="arccos": add_number(t), bg="grey")
arccos.place(x=210, y=125)
arctan = tk.Button(eWin, width=8, font=("Montserrat",12), text="arctan", command=lambda t="arctan": add_number(t), bg="grey")
arctan.place(x=310, y=125)
dot = tk.Button(eWin, width=8, font=("Montserrat",12), text=".", command=lambda t=".": add_number(t), bg="grey")
dot.place(x=110, y=325)
formul = tk.Button(eWin, width=41, font=("Montserrat",12), text="Formular Calculator", bg="grey", command=formularCalculator)
formul.place(x=10, y=475)
eWin.mainloop()